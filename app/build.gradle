apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    buildToolsVersion "29.0.3"
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }


    defaultConfig {
        vectorDrawables.useSupportLibrary = true
        applicationId "com.chuo.timetable"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.firebase:firebase-auth:19.4.0'
    implementation 'com.google.firebase:firebase-analytics:17.5.0'

    implementation 'com.google.firebase:firebase-firestore-ktx:21.7.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.1.1'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'


    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.firebase:firebase-functions:16.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'androidx.multidex:multidex:2.0.1'

    implementation "androidx.fragment:fragment-ktx:1.2.5"


    implementation "com.google.android.material:material:$designVersion"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.exifinterface:exifinterface:$designVersion"
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha05'

    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"


    implementation("org.jetbrains.kotlin:kotlin-reflect:1.3.70")


    implementation "com.jakewharton.threetenabp:threetenabp:$threeTenAbpVersion"




//kotlin coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.8'

    implementation "com.jakewharton.timber:timber:$timberVersion"


    def lifecycle_version = "2.2.0"
    def arch_version = "2.1.0"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Annotation processor
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_version"




    testImplementation "org.mockito:mockito-core:$mockitoVersion"

    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.7'


    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    androidTestAnnotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    compileOnly 'com.squareup.inject:assisted-inject-annotations-dagger2:0.5.2'

    kapt 'com.squareup.inject:assisted-inject-processor-dagger2:0.5.2'



    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"

    // for JVM:
    testImplementation 'org.amshove.kluent:kluent:1.61'

    // for Android:
    testImplementation 'org.amshove.kluent:kluent-android:1.61'

    // To get JUnit errors from kotlin.test, to e.g. enable diff windows in failure messages
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit:1.3.70'

    //mockk
    testImplementation "io.mockk:mockk:1.10.0"
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation "org.robolectric:robolectric:4.3.1"

    testImplementation 'com.squareup.okhttp3:mockwebserver:4.3.1'

}
